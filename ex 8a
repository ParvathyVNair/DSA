#include<stdio.h>
#define MAX_SIZE 10 // Maximum size of the queue array

int queue[MAX_SIZE]; // Declaration of the queue array
int front = -1; // Initializing the front and rear of the queue
int rear = -1;

// Function to check if the queue is full
int isFull() {
    if(rear == MAX_SIZE-1) {
        return 1;
    }
    else {
        return 0;
    }
}

// Function to check if the queue is empty
int isEmpty() {
    if(front == -1 || front > rear) {
        return 1;
    }
    else {
        return 0;
    }
}

// Function to insert element into the queue at the rear end
void enqueue(int item) {
    if(isFull()) {
        printf("Queue is full. Cannot enqueue %d\n", item);
    }
    else {
        if(front == -1) {
            front = 0;
        }
        rear++;
        queue[rear] = item;
        printf("Enqueued %d\n", item);
    }
}

// Function to remove element from the queue from the front end
void dequeue() {
    int item;
    if(isEmpty()) {
        printf("Queue is empty. Cannot dequeue.\n");
    }
    else {
        item = queue[front];
        front++;
        printf("Dequeued %d\n", item);
    }
}

// Function to display the elements of the queue
void display() {
    int i;
    if(isEmpty()) {
        printf("Queue is empty\n");
    }
    else {
        printf("Elements of queue are: ");
        for(i=front; i<=rear; i++) {
            printf("%d ", queue[i]);
        }
        printf("\n");
    }
}

// Main function to test the queue operations
int main() {
    int choice, item;
    printf("Queue implementation using array\n");
    while(1) {
        printf("1. Enqueue\n2. Dequeue\n3. Display\n4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        switch(choice) {
            case 1:
                printf("Enter element to insert: ");
                scanf("%d", &item);
                enqueue(item);
                break;
            case 2:
                dequeue();
                break;
            case 3:
                display();
                break;
            case 4:
                printf("Exiting the program\n");
                return 0;
            default:
                printf("Invalid choice\n");
        }
    }
    return 0;
}
